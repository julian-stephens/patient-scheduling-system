openapi: 3.0.3
info:
  version: 1.0.0
  title: Patient Scheduling System
  contact:
    name: Julian Stpehens
    email: hello@julianstephens.net
    url: 'http://julianstephens.net/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  description: |
    # OpenAPI Definition

    ## Resources

    - Person:

      - id
      - name
      - email
      - phone
      - address
      - sex
      - dob
      - appointments
      - createdAt
      - personType

    - Patient (extends Person)

      - medications
      - pharmacy
      - primaryDoctor
      - admitStatus

    - Employee (extends Person)

      - supervisor
      - role

    - Appointment

      - id
      - dateTime
      - reason
      - createdAt

    - Pharmacy

      - id
      - name
      - address

    - Medication

      - id
      - name
      - issueDate
      - dosage
      - duration
      - patientId

    ## Routes

    - /patients
      - GET: Array<Patient>
        - getPatients
      - POST: null
        - createPatient
    - /patients/{patientId}
      - GET: Patient
        - showPatientById
      - PUT: null
        - updatePatient
      - DELETE: Patient
        - deletePatient
    - /patients/{patientId}/appointments
      - GET: Array<Appointment>
        - getAppointmentsByPatient
      - POST: null
        - createAppointmentByPatient
    - /patients/{patientId}/{appointmentId}
      - GET: Appointment
        - showAppointmentByPatient
      - PUT: null
        - updateAppointmentByPatient
      - DELETE: Appointment
        - deleteAppointmentByPatient
    - /patients/{patientId}/medications
      - GET: Array<Medication>
        - getMedicationsByPatient
      - POST: null
        - createMedicationByPatient
    - /patients/{patientId}/{medicationId}
      - GET: Medication
        - showMedicationByPatient
      - PUT: null
        - updateMedicationByPatient
      - DELETE: Medication
        - deleteMedicationByPatient
    - /patients/{patientId}/pharmacies
      - GET: Array<Pharamacy>
        - getPharmaciesByPatient
      - POST: null
        - createPharmacyByPatient
    - /patients/{patientId}/{pharmacyId}
      - GET: Pharamacy
        - showPharmaciesByPatient
      - PUT: null
        - updatePharmacyByPatient
      - DELETE: Pharmacy
        - deletePharmacyByPatient
    - /employees
      - GET: Array<Employee>
        - getEmployees
      - POST: null
        - createEmployee
    - /employees/{employeeId}
      - GET: Employee
        - showEmployeeById
      - PUT: null
        - updateEmployee
      - DELETE: Employee
        - deleteEmployee
    - /employees/{employeeId}/appointments
      - GET: Array<Appointment>
        - getAppoinmentsByEmployee
      - POST: null
        - createAppointmentByEmployee
    - /employees/{employeeId}/{appointmentId}
      - GET: Appointment
        - showApointmentByEmployee
      - PUT: null
        - updateAppointmentByEmployee
      - DELETE: Appointment
        - deleteAppointmentByEmployee
    - /appointments
      - GET: Array<Appointment>
        - getAppointments
      - POST: null
        - createAppointment
    - /appointments/{appointmentId}
      - GET: Appointment
        - showAppointmentById
      - PUT: null
        - updateAppointment
      - DELETE: Appointment
        - deleteAppointment
    - /medications
      - GET: Array<Medication>
        - getMedications
      - POST: null
        - createMedication
    - /medications/{medicationId}
      - GET: Medication
        - showMedicationById
      - PUT: null
        - updateMedication
      - DELETE: Medication
        - deleteMedication
    - /pharmacies
      - GET: Array<Pharamacy>
        - getPharmacies
      - POST: null
        - createPharmacy
    - /pharmacies/{pharmacyId}
      - GET: Pharamacy
        - showPharmacyById
      - PUT: null
        - updatePharmacy
      - DELETE: Pharmacy
        - deletePharmacy
tags:
  - name: patients
    description: Operations about patients.
  - name: employees
    description: Operations about employees.
  - name: appointments
    description: Operations about appointments.
  - name: medications
    description: Operations about medications.
  - name: pharmacies
    description: Operations about pharmacies.
paths:
  /patients:
    get:
      summary: List all patients
      tags:
        - patients
      operationId: getAllPatients
      responses:
        '200':
          description: A paged array of patients
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                description: List all patients
                type: array
                items:
                  $ref: '#/paths/~1patients/post/requestBody/content/application~1json/schema'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: integer
                    minimum: 100
                    maximum: 600
                  message:
                    type: string
    post:
      summary: Create a patient
      tags:
        - patients
      operationId: createPatient
      requestBody:
        description: Patient to add to the system
        content:
          application/json:
            schema:
              description: A representation of a Patient
              allOf:
                - type: object
                  discriminator:
                    propertyName: personType
                  anyOf:
                    - type: object
                      properties:
                        city:
                          description: 'City, district, suburb, town, or village.'
                          maxLength: 5000
                          nullable: true
                          type: string
                        country:
                          description: 'Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).'
                          maxLength: 5000
                          nullable: true
                          type: string
                        line1:
                          description: 'Address line 1 (e.g., street, PO Box, or company name).'
                          maxLength: 5000
                          nullable: true
                          type: string
                        line2:
                          description: 'Address line 2 (e.g., apartment, suite, unit, or building).'
                          maxLength: 5000
                          nullable: true
                          type: string
                        postal_code:
                          description: ZIP or postal code.
                          maxLength: 5000
                          nullable: true
                          type: string
                        state:
                          description: 'State, county, province, or region.'
                          maxLength: 5000
                          nullable: true
                          type: string
                    - type: object
                      properties:
                        id:
                          nullable: true
                          type: string
                          description: The unique identifier of the resource
                          maxLength: 5000
                        name:
                          description: The person's full legal name.
                          $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/1/properties/medications/items/properties/name'
                        email:
                          description: The person's email address.
                          type: string
                          format: email
                          example: john.doe@example.com
                        phone:
                          description: The person's phone number.
                          type: string
                          pattern: '^\d{3}-\d{3}-\d{4}$'
                          example: 111-222-3333
                        sex:
                          description: The person's sex.
                          type: string
                          enum:
                            - male
                            - female
                        dob:
                          nullable: true
                          type: object
                          properties:
                            day:
                              description: 'The day of birth, between 1 and 31.'
                              nullable: true
                              type: integer
                            month:
                              description: 'The month of birth, between 1 and 12.'
                              nullable: true
                              type: integer
                            year:
                              description: The four-digit year of birth.
                              nullable: true
                              type: integer
                        appointments:
                          type: array
                          description: The upcoming and previous appointments that a person has scheduled
                          items:
                            type: object
                            properties:
                              id:
                                $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/1/properties/id'
                                nullable: true
                              dateTime:
                                type: string
                                format: date-time
                              reason:
                                type: string
                                enum:
                                  - SICK
                                  - PHYSICAL
                                  - DRUG
                                  - ALLERGY
                              createdAt:
                                $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/1/properties/createdAt'
                        createdAt:
                          type: string
                          format: date-time
                        personType:
                          type: string
                          enum:
                            - DOCTOR
                            - RECEPTIONIST
                            - SUPERVISOR
                - type: object
                  properties:
                    medications:
                      description: The medications that a patient is currently prescribed
                      type: array
                      items:
                        description: A medication to be prescribed to a patient
                        type: object
                        required:
                          - name
                          - dosage
                        properties:
                          id:
                            $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/1/properties/id'
                            nullable: true
                          name:
                            description: The full name of a resource
                            type: string
                            maxLength: 100
                            example: John Doe
                          issueDate:
                            description: The date that the medication was prescribed
                            type: string
                            format: date
                            example: 2021-06-08T00:00:00.000Z
                          dosage:
                            type: string
                            description: The recommended dosage associated with the prescribed medication
                          duration:
                            type: integer
                            description: The number of days that the medication should be prescribed
                          patient:
                            $ref: '#/paths/~1patients/post/requestBody/content/application~1json/schema'
                          createdAt:
                            $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/1/properties/createdAt'
                    pharmacy:
                      description: A pharmacy that fills patient presciptions
                      anyOf:
                        - $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/0'
                        - type: object
                          properties:
                            id:
                              $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/1/properties/id'
                              nullable: true
                            name:
                              $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/1/properties/medications/items/properties/name'
                            address: null
                            createdAt:
                              $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/1/properties/createdAt'
                    primaryDoctor:
                      description: A representation of an Employee
                      allOf:
                        - $ref: '#/paths/~1patients/post/requestBody/content/application~1json/schema/allOf/0'
                        - type: object
                          properties:
                            role:
                              type: string
                              $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/1/properties/personType'
                            supervisor:
                              $ref: '#/paths/~1patients/post/requestBody/content/application~1json/schema/allOf/0'
                            createdAt:
                              $ref: '#/paths/~1patients/get/responses/200/content/application~1json/schema/items/allOf/0/anyOf/1/properties/createdAt'
                    admitStatus:
                      type: boolean
      responses:
        '201':
          description: Resource created successfully.
        default:
          $ref: ../components/responses/UnexpectedError.yaml
